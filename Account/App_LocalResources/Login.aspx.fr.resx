<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="bt_login.Text" xml:space="preserve">
    <value>Se connecter</value>
  </data>
  <data name="ForgotPassword.Text" xml:space="preserve">
    <value>Oublié votre mot de passe?</value>
  </data>
  <data name="Login.InnerHtml" xml:space="preserve">
    <value>Se connecter</value>
  </data>
  <data name="Register.Text" xml:space="preserve">
    <value>Créer un nouveau compte</value>
  </data>
  <data name="RememberMe.InnerHtml" xml:space="preserve">
    <value>Rester connecté?</value>
  </data>
  <data name="tb_email.LabelText" xml:space="preserve">
    <value>Courriel</value>
  </data>
  <data name="tb_pwd.LabelText" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="LoginPage.Title" xml:space="preserve">
    <value>Connexion</value>
  </data>
  <data name="AlertEmailNotConfirmedContent" xml:space="preserve">
    <value>S'il vous plait, confirmez votre courriel avant de vous connecter.</value>
  </data>
  <data name="AlertEmailNotConfirmedTitle" xml:space="preserve">
    <value>Courriel non validé!</value>
  </data>
  <data name="resendConfirmation.Text" xml:space="preserve">
    <value>Renvoyer le lien de validation à mon courriel</value>
  </data>
  <data name="lbl_SMContent.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lbl_SMHeader.Text" xml:space="preserve">
    <value />
  </data>
  <data name="lbl_TCContent.Text" xml:space="preserve">
    <value>Les utilisateurs internes de la banque de données IJPReporting du ministère de la Justice Canada (Justice) doivent lire, comprendre et accepter les modalités d’utilisation énoncées ci-dessous pour accéder la banque de données. Ces modalités assureront l’intégrité de la banque de données IJPReporting et la protection de l’information qui s’y retrouve.
&lt;br/&gt;&lt;br/&gt;
Les renseignements trouvés dans la banque de données IJPReporting en application des services d’informations rendus au public doivent, en tout temps, être protégés et communiqués uniquement aux personnes autorisées à les obtenir, conformément aux lois, politiques et lignes directrices fédérales en matière de protection des renseignements personnels.
&lt;br/&gt;&lt;br/&gt;
Les utilisateurs et administrateurs doivent se connecter à la banque de données IJPReporting seulement à partir des lieux de Justice et jamais par accès à distance.  Afin de se connecter, un utilisateur/administrateur doit, en tout temps, utiliser seulement son propre code d’utilisateur fourni par Justice et son propre mot de passe; il doit se déconnecter lorsqu’il n’a plus besoin d’utiliser la banque de données.  L’utilisateur va s’assurer que son ordinateur est barré chaque fois qu’il quitte son bureau, nécessitant un mot de passe robuste pour le débarrer.  L’accès à cette banque de données sera fourni seulement à ceux autorisés de l’obtenir et qui détiennent en tout temps une côte valide de sécurité de niveau secret.
&lt;br/&gt;&lt;br/&gt;
Les utilisateurs doivent consulter uniquement les données contenues dans la banque de données IJPReporting qui relèvent de leur responsabilité et pour fins d’affaires seulement.
&lt;br/&gt;&lt;br/&gt;
Pour tout problème technique concernant la banque de données, un courriel doit être envoyé à l’adresse courriel indiqué sous l’onglet Contactez-nous.
&lt;br/&gt;&lt;br/&gt;
Les utilisateurs doivent prendre note que cette banque de données permet aux administrateurs du système d’effectuer le suivi de toutes les transactions effectuées par chaque utilisateur dans le cadre de la maintenance, l’intégrité et la sécurité du système.  L’utilisation de la banque de données IJPReporting est contrôlé par les administrateurs du système comme l’exige la Politique du gouvernement sur la sécurité (&lt;a href="https://www.tbs-sct.gc.ca/pol/doc-fra.aspx?id=16578"&gt;https://www.tbs-sct.gc.ca/pol/doc-fra.aspx?id=16578&lt;/a&gt;).  Quiconque qui utilise la banque de données IJPReporting consent implicitement à faire l’objet d’un tel contrôle.  Toute utilisation non autorisée faite par des employés ou toute autre personne peut entraîner des mesures disciplinaires ou encore des poursuites criminelles.
&lt;br/&gt;&lt;br/&gt;

Par la présente, je confirme avoir lu et compris les modalités énoncées ci-dessus et j’accepte de m’y conformer.</value>
  </data>
  <data name="lbl_TCHeader.Text" xml:space="preserve">
    <value>&lt;b&gt;MODALITÉS POUR L’UTILISATION DE LA BANQUE DE DONNÉES FCYINFOLINE
UTILISATEURS INTERNES
&lt;/b&gt;</value>
  </data>
</root>